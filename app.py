# Bibliotecas
import streamlit as st  
import pandas as pd
import plotly.express as px
import numpy as np
import matplotlib.pyplot as plt
import statsmodels.api as sm
import sklearn as sk
from pandas import to_datetime, date_range
from prophet import Prophet
from sklearn.metrics import mean_squared_error
from prophet.diagnostics import cross_validation
from prophet.diagnostics import performance_metrics
from prophet.plot import plot_cross_validation_metric
import joblib
import datetime


# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Tech Challenge fase 4", layout="wide",
    initial_sidebar_state="auto", page_icon="üìà")

st.image("combustivel.png", width=80)
st.subheader('Poje√ß√£o de Pre√ßo do Petr√≥leo Brent', divider='rainbow' )

# Barra de menus
tab0, tab1, tab2, tab3 = st.tabs(['###### Previs√µes', '###### Valida√ß√£o','###### Fatores Hist√≥ricos', '###### Coment√°rios'],)


# Importa√ß√£o da base
df_anp = pd.read_csv("ipeadata[07-05-2024-09-41].csv", sep=";")


# Removendo coluna Unnamed: 2
df_anp = df_anp.drop(columns=["Unnamed: 2"])


# transformando a coluna data em datetime
df_anp['Data'] = pd.to_datetime(df_anp['Data'], format='%d/%m/%Y')
df_anp['Pre√ßo - petr√≥leo bruto - Brent (FOB) - US$ - Energy Information Administration (EIA) - EIA366_PBRENT366'] = df_anp[
    'Pre√ßo - petr√≥leo bruto - Brent (FOB) - US$ - Energy Information Administration (EIA) - EIA366_PBRENT366'].str.replace(',', '.').astype('float64')


# Renomeando colunas
df_anp.rename(columns={'Pre√ßo - petr√≥leo bruto - Brent (FOB) - US$ - Energy Information Administration (EIA) - EIA366_PBRENT366': 'Pre√ßo petr√≥leo Brent'
                       }, inplace=True)


# Aten√ß√£o: # removendo valores nulos(constatei que s√£o em sua grande maioria sabado e domingo, dias sem cota√ß√£o)
df_anp = df_anp.dropna()


df_anp_index = df_anp.set_index('Data')  # definindo a coluna Data como √≠ndice
# df_anp_index.drop(columns=['Dia', 'M√™s', 'Ano'], inplace=True) # removendo as colunas Dia, M√™s e Ano
# df_anp_index.head()


# Gr√°fico1
# plotando o gr√°fico de linha com o pre√ßo do petr√≥leo Brent
with tab2:
    #col1, col2 = st.columns(2)
    #with col1:
        fig=px.line(df_anp, x='Data', y='Pre√ßo petr√≥leo Brent', title='Hist√≥rico de pre√ßo Brent',
            labels={'Pre√ßo petr√≥leo Brent': 'Pre√ßo do petr√≥leo Brent (US$)'})
        fig.add_shape(
        type="rect",
        xref="x",
        yref="paper",
        x0="2008-01-01",
        y0=0,
        x1="2008-12-31",
        y1=1,
        fillcolor="LightSalmon",
        opacity=0.5,
        layer="below",
        line_width=0,
)
        fig.add_shape(
        type="rect",
        xref="x",
        yref="paper",
        x0="2011-01-01",
        y0=0,
        x1="2011-12-31",
        y1=1,
        fillcolor="LightSalmon",
        opacity=0.5,
        layer="below",
        line_width=0,
)
        fig.add_shape(
        type="rect",
        xref="x",
        yref="paper",
        x0="2016-01-01",
        y0=0,
        x1="2016-12-31",
        y1=1,
        fillcolor="LightSalmon",
        opacity=0.5,
        layer="below",
        line_width=0,
)
        fig.add_shape(
        type="rect",
        xref="x",
        yref="paper",
        x0="2020-01-01",
        y0=0,
        x1="2020-12-31",
        y1=1,
        fillcolor="LightSalmon",
        opacity=0.5,
        layer="below",
        line_width=0,
)
        fig.add_shape(
        type="rect",
        xref="x",
        yref="paper",
        x0="2022-01-01",
        y0=0,
        x1="2022-12-31",
        y1=1,
        fillcolor="LightSalmon",
        opacity=0.5,
        layer="below",
        line_width=0,
)
        fig.show()
        st.plotly_chart(fig, use_container_width=True)


############ Construindo o modelo##############
# selecionando o intervalo de 10 anos
df_anp_range_10_anos = df_anp[(df_anp['Data'] >= '2014-04-29')]
# df_anp_range_10_anos.head()


# selecionando as colunas Data e Pre√ßo petr√≥leo Brent
df_anp_range_10_anos_prophet = df_anp_range_10_anos[[
    'Data', 'Pre√ßo petr√≥leo Brent']]
# df_anp_range_10_anos_prophet.head()


df_anp_range_10_anos_prophet.rename(columns={
                                    "Data": "ds", "Pre√ßo petr√≥leo Brent": "y"}, inplace=True)  # renomeando as colunas
# df_anp_range_10_anos_prophet.head()


m2 = Prophet(changepoint_prior_scale=0.08, seasonality_prior_scale=0.08,
             seasonality_mode="multiplicative", changepoint_range=0.95)
m2.fit(df_anp_range_10_anos_prophet)


# criando um dataframe com 90 dias no futuro (pode ser alterado para tentar uma previs√£o melhor)
future2 = m2.make_future_dataframe(periods=30)
# future2.tail()


with tab0:
    col1, col2=st.columns(2)
    with col1:
        st.write('##### Proje√ß√£o de pre√ßo - 30 dias')
        forecast2 = m2.predict(future2)
        forecast3=forecast2[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].sort_values(by="ds",ascending=False)    
        forecast3['ds'] = pd.to_datetime(forecast3['ds']).dt.date
        forecast3 = forecast3.head(30)
        forecast3 = forecast3.reset_index(drop=True)
        pd.set_option('display.max_columns', 4)
        pd.set_option('display.max_rows', 30)
        st.dataframe(forecast3, width=650)    


# Gr√°fico2
with tab0:
    with col2:
        fig1 = m2.plot(forecast2, xlabel='Data', ylabel='Pre√ßo do petr√≥leo Brent (US$)')
        st.write('##### Real x Previsto')
        plt.gca().spines['top'].set_visible(False)
        plt.gca().spines['right'].set_visible(False)
        plt.gca().spines['bottom'].set_visible(False)
        plt.gca().spines['left'].set_visible(False)
        st.pyplot(fig1,use_container_width=True)


with tab0:
    col3, col4=st.columns((1,1))
    with col4:
        st.write('##### Range previsto (30 dias)')
        fig2 = px.line(forecast2.tail(30), x='ds', y='yhat', labels={'yhat': 'Pre√ßo do petr√≥leo Brent (US$)'})
        fig2.show()
        st.plotly_chart(fig2)
       

with tab0:
    with col3:
        st.write('##### Leitura gr√°fica ')
        st.write('''
                <br>                
    ‚û°Ô∏è Podemos observar no gr√°fico "Previsto x Real" (acima), que o modelo prev√™ um aumento no pre√ßo do petr√≥leo Brent para os pr√≥ximos 30 dias, com um intervalo de confian√ßa de 80%.  
                 A linha azul representa a m√©dia prevista, enquanto as linhas pontilhadas representam o intervalo de confian√ßa.  
                <br>
                <br>  
                                
    ‚û°Ô∏è O gr√°fico ao lado √© um recorte que contempla o per√≠odo de 30 dias previsto pelo modelo para o pre√ßo do petr√≥leo Brent, com base nos dados hist√≥ricos dos √∫ltimos 10 anos.  
''', unsafe_allow_html=True, use_container_width=True)


# Valida√ß√µes == cross_validation e performance_metrics / verificar se √© viavel mostrar no Streamlit
df_anp_range_10_anos_prophet_cv = cross_validation(m2, initial='730 days', period='180 days', horizon = '30 days')
df_anp_range_10_anos_prophet_cv.sort_values("ds", ascending=False)


# Valida√ß√£o
with tab1:
    col3, col4=st.columns(2)
    with col3:
        st.write("##### M√©tricas de erro para a valida√ß√£o do modelo")
        performance2 = performance_metrics(df_anp_range_10_anos_prophet_cv)
        limited_df = performance2.head(30)
        st.dataframe(limited_df, use_container_width=True)

with tab1:
    with col4:
        st.write('''
    #### Valida√ß√£o do modelo
        
     ‚û°Ô∏è mse: m√©dia dos quadrados dos erros (quanto mais pr√≥ximo de 0, melhor √© o modelo).  
                 * Muito √∫til quando temos outliers, mas n√£o √© o caso neste dataset.
                 
     ‚û°Ô∏è rmse: raiz quadrada do MSE (quanto mais pr√≥ximo de 0, melhor).
                 
     ‚û°Ô∏è mae: m√©dia dos valores absolutos dos erros.
       
     ‚û°Ô∏è mape: m√©dia dos valores absolutos dos erros percentuais.  
                 * No modelo apresentado o erro percentual m√©dio est√° entre 8 e 17%.
                
     ‚û°Ô∏è mdape: mediana dos valores absolutos dos erros percentuais.
                 
     ‚û°Ô∏è smape: erro percentual absoluto sim√©trico m√©dio.
                 
     ‚û°Ô∏è cavarege: propor√ß√£o de vezes que o intervalo de confian√ßa real cont√©m o valor real (quanto mais pr√≥ximo de 1, melhor).

        ''')

# Fatores hist√≥ricos
with tab2:
        st.write('''
    #### Alguns fatores hist√≥rico e crises que influenciaram o pre√ßo do petr√≥leo Brent:
        
    ‚û°Ô∏è 2008: Bolha imobili√°ria nos Estados Unidos, ao atingir pre√ßos bem acima do mercado, o setor acabou entrando em colapso, a crise financeira e a recess√£o frearam a demanda por petr√≥leo.

    ‚û°Ô∏è 2011: Maior alta em compara√ß√£o aos √∫ltimos dois anos, ocasionado grande parte devida √† crise na L√≠bia, um dos maiores produtores de petr√≥leo do mundo, conflitos no pa√≠s levaram a uma interrup√ß√£o significativa na produ√ß√£o. Como resultado, a oferta global de petr√≥leo diminuiu, levando a um aumento nos pre√ßos.  
                 
    ‚û°Ô∏è 2016: Excesso de oferta no mercado resultou em uma queda significativa nos pre√ßos do petr√≥leo, durante esse per√≠odo, v√°rios fatores contribu√≠ram para o excesso de oferta:  
    * aumentou significativo da produ√ß√£o de petr√≥leo nos Estados Unidos.
    * a OPEP manteve sua produ√ß√£o em n√≠veis elevados para manter sua participa√ß√£o de mercado e pressionar os produtores de petr√≥leo de xisto dos EUA.  
    * desacelera√ß√£o econ√¥mica em v√°rias partes do mundo, incluindo a China, reduziu a demanda por petr√≥leo.  
    
    ‚û°Ô∏è 2020: COVID -19, a crise do coronav√≠rus e as medidas de lockdown provocaram queda brusca na demanda por combustivel, provocando uma queda acentuada em todo o periodo.  
    Com as restri√ß√µes de viagem e o fechamento de muitas ind√∫strias, a demanda por combust√≠vel caiu drasticamente.  
    Isso levou a um excesso de oferta de petr√≥leo no mercado, o que resultou em uma queda acentuada nos pre√ßos, al√©m disso, a incerteza sobre a dura√ß√£o da pandemia e a velocidade da recupera√ß√£o econ√¥mica tamb√©m afetaram os pre√ßos do petr√≥leo.  
                 
    ‚û°Ô∏è 2022: Devido aos reflexos da guerra entre R√∫ssia e Ucr√¢nia, a produ√ß√£o teve seu escoamento e por consequ√™ncia exporta√ß√£o prejudicados, seja por motivos de san√ß√µes ou pelo jogo geopol√≠tico.
    ''')


with tab3:
     st.write('''
    #### Caracter√≠sticas do modelo   
              
    üî∑ Modelo construido com a biblioteca Prophet, que √© uma ferramenta de previs√£o de s√©ries temporais publicada pelo Facebook.  
            
    üî∑ O Prophet √© projetado para an√°lise de s√©ries temporais em larga escala e prev√™ para per√≠odos sazonais.  
            
    üî∑ Ele lida com lacunas nos dados, mudan√ßas nas tend√™ncias e sazonalidade, e √© robusto a outliers.  
            
    üî∑ Modelo treinado com dados hist√≥ricos dos √∫ltimos 10 anos, e prev√™ o pre√ßo do petr√≥leo Brent para os pr√≥ximos 30 dias.  
            
    üî∑ O modelo apresenta um erro percentual m√©dio entre 8 e 17%.  
            
    üî∑ Ao todo foram testados 3 modelos, todos utilizando o Prophet, por√©m, cada um com um ajuste de par√¢metros diferente,  
    aquele que melhor se ajustou foi o modelo que continha um um range do √∫ltimos 10 anos.  
            
    üî∑ Para que a previs√£o se mantenha atualizada, √© necess√°rio que o modelo seja re-treinado periodicamente, com novos dados.  
            
    üî∑ Ap√≥s os testes de hiperparametros, foi possivel constatar que o comportamento melhora a medida que o range de previs√£o diminui, ou seja,  
    inicialmente foi testado com 90 dias, depois 30 e por fim 120 dias, sendo que o modelo que apresentou melhor desempenho foi o de 30 dias.  
            
    üî∑ O modelo √© uma ferramenta de aux√≠lio √† tomada de decis√£o, e n√£o deve ser utilizado como √∫nica fonte de informa√ß√£o.  
    ''')
     
